// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  accounts      Account[]
  sessions      Session[]
  buyers        Buyer[]
  buyerHistory  BuyerHistory[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum City {
  Chandigarh
  Mohali
  Zirakpur
  Panchkula
  Other
}

enum PropertyType {
  Apartment
  Villa
  Plot
  Office
  Retail
}

enum BHK {
  Studio
  One
  Two
  Three
  Four
}

enum Purpose {
  Buy
  Rent
}

enum Timeline {
  ZeroToThreeMonths @map("0-3m")
  ThreeToSixMonths  @map("3-6m")
  MoreThanSixMonths @map(">6m")
  Exploring
}

enum Source {
  Website
  Referral
  WalkIn @map("Walk-in")
  Call
  Other
}

enum Status {
  New
  Qualified
  Contacted
  Visited
  Negotiation
  Converted
  Dropped
}

model Buyer {
  id          String       @id @default(uuid())
  fullName    String
  email       String?
  phone       String
  city        City
  propertyType PropertyType
  bhk         BHK?
  purpose     Purpose
  budgetMin   Int?
  budgetMax   Int?
  timeline    Timeline
  source      Source
  status      Status       @default(New)
  notes       String?
  tags        String    @default("") // Comma-separated values
  attachmentUrl String?
  ownerId     String
  owner       User         @relation(fields: [ownerId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  history     BuyerHistory[]

  @@index([ownerId])
  @@index([status])
  @@index([city])
  @@index([propertyType])
  @@index([timeline])
  @@index([fullName])
}

model BuyerHistory {
  id        String   @id @default(uuid())
  buyerId   String
  buyer     Buyer    @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  changedById String
  changedBy User     @relation(fields: [changedById], references: [id])
  changedAt DateTime @default(now())
  diff      Json

  @@index([buyerId])
  @@index([changedById])
}
